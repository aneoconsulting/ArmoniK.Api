# Use the latest version of Alpine as the base image
FROM alpine:3.14 AS builder
ARG GRPC_VERSION=v1.54.0

# Install dependencies
RUN apk update && apk add --no-cache \
    git \
    gcc \
    g++ \
    build-base \
    autoconf \
    automake \
    libtool \
    curl \
    cmake \ 
    c-ares \
    c-ares-dev \
    make \
    unzip \
    linux-headers

# Clone repositories
WORKDIR /tmp
RUN git clone -b $GRPC_VERSION https://github.com/grpc/grpc

# Build gRPC
WORKDIR /tmp/grpc
RUN git submodule update --init
RUN mkdir -p cmake/build && \
    cd cmake/build && \
    cmake -DCMAKE_INSTALL_PREFIX=/app/install \
    -DgRPC_INSTALL=ON \
    -DCMAKE_BUILD_TYPE=Release       \
    ../.. && \
    make -j $(nproc) && \
    make install && \
    ln -sf /app/install/lib/libgrpc++.so /app/install/lib/libgrpc++.so.1 && \
    ln -sf /app/install/lib/libgrpc++_reflection.so /app/install/lib/libgrpc++_reflection.so.1

ENV PATH="/app/install/lib:$PATH"
ENV PATH="/app/install/bin:$PATH"

RUN echo $PATH
WORKDIR /app/source

COPY ArmoniK.Api.Common ./ArmoniK.Api.Common
COPY ArmoniK.Api.Worker ./ArmoniK.Api.Worker
COPY ArmoniK.Api.Worker.Tests ./ArmoniK.Api.Worker.Tests
COPY CMakeLists.txt ./

WORKDIR /app/proto
COPY ./Protos /app/proto

WORKDIR /app/builder
RUN cmake "-DCMAKE_INSTALL_PREFIX=/app/install" /app/source/
RUN make -j $(nproc) install


# Build protobuf
FROM alpine:3.14

# Install dependencies
RUN apk update && apk add --no-cache \
    git \
    gcc \
    g++ \
    build-base \
    autoconf \
    automake \
    libtool \
    curl \
    cmake \ 
    c-ares \
    c-ares-dev \
    make \
    unzip \
    linux-headers

#WORKDIR /app
RUN addgroup -g 5000 -S armonikuser && adduser -D -h /home/armonikuser  -u 5000 -G armonikuser --shell /bin/sh armonikuser && mkdir /cache && chown armonikuser: /cache
USER armonikuser
COPY --from=builder /app /app
ENV PATH="/app/install/lib:$PATH"
ENV PATH="/app/install/bin:$PATH"

ENTRYPOINT ["bash", "-c", "/app/install/bin/Armonik.Api.Worker.Tests"]
#ENTRYPOINT ["bash"] 