# Use the latest version of Ubuntu 20.04 as the base image
FROM ubuntu:20.04

ARG GRPC_VERSION=v1.54.0

# Install dependencies
RUN DEBIAN_FRONTEND="noninteractive" TZ="Europe/London" apt update && apt install -y \
    git \
    gcc \
    g++ \
    autoconf \
    automake \
    libtool \
    curl \
    make \
    unzip

# Install build-essential and wget, then clean up apt cache to reduce image size
RUN apt-get update \
  apt-get install build-essential wget cmake

# Clone the gRPC repository
WORKDIR /tmp
RUN git clone -b $GRPC_VERSION https://github.com/grpc/grpc

# Build gRPC
WORKDIR /tmp/grpc
RUN git submodule update --init
RUN mkdir -p cmake/build && \
    cd cmake/build && \
    cmake -DCMAKE_INSTALL_PREFIX=/app/grpc \
    -DgRPC_INSTALL=ON \
    -DCMAKE_BUILD_TYPE=Release       \
    ../.. && \
    make -j $(nproc) && \
    make install && \
    # Create symlinks for the gRPC libraries
    ln -sf /app/grpc/lib/libgrpc++.so /app/grpc/lib/libgrpc++.so.1 && \
    ln -sf /app/grpc/lib/libgrpc++_reflection.so /app/grpc/lib/libgrpc++_reflection.so.1

# Set environment variables for protobuf
ENV protobuf_BUILD_TESTS=OFF

# Update PATH with the new directories
ENV PATH="/app/install/lib:$PATH"
ENV PATH="/app/install/bin:$PATH"

# Print the PATH variable
RUN echo $PATH

# Set the working directory for building protobuf
WORKDIR /app/build

# Set the default command to build the client using CMake and make
CMD ["bash", "-c", "cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/app/install -DBUILD_CLIENT=ON /app/source/ && make -j $(nproc) install"]

# Uncomment the line below if you want the container to start in the bash shell by default
# ENTRYPOINT ["bash"]
