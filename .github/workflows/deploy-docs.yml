name: Deploy Docs to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  generate-proto-docs:
    name: Generate Proto Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - run: npm i -g pnpm @antfu/ni

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: nci

        # This will be used to avoid the use of the docker image to generate the documentation if the proto files have not changed
      - name: Cache Generated Docs from Protos
        id: proto-cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        with:
          path: .docs/content/api/*.md
          key: proto-v1-${{ hashFiles('Protos/V1/**.proto') }}

      - name: Generate protobuf documentation
        if: steps.proto-cache.outputs.cache-hit != 'true'
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # v3
        with:
          image: pseudomuto/protoc-gen-doc
          options: -v ${{ github.workspace }}/.docs/content/api:/out -v ${{ github.workspace }}/Protos/V1:/protos
          run: |
            protoc -I/usr/include -Iprotos --doc_out=/out --doc_opt=markdown,tmp.md protos/*.proto

      - name: Remove Toc
        if: steps.proto-cache.outputs.cache-hit != 'true'
        run: node ./scripts/remove-useless-md.mjs .docs/content/api/tmp.md .docs/content/api/1.v1.md

      - name: Remove tmp.md
        if: steps.proto-cache.outputs.cache-hit != 'true'
        run: rm .docs/content/api/tmp.md

  build-docs:
    name: Build Docs
    runs-on: ubuntu-latest
    needs: [generate-proto-docs]
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      # Restore API proto documentation
      - name: Cache Generated Docs from Protos
        id: proto-cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        with:
          path: .docs/content/api/*.md
          key: proto-v1-${{ hashFiles('Protos/V1/**.proto') }}

      - run: npm i -g pnpm @antfu/ni

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: cd .docs && nci

      - name: Use NODE_ENV=production
        run: echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Set the site URL
        run: echo "NUXT_PUBLIC_SITE_URL=https://aneoconsulting.github.io/ArmoniK.Api/" >> $GITHUB_ENV

      - name: Static HTML export with Nuxt
        run: cd .docs && nr generate

      - name: Upload artifact
        uses: actions/upload-pages-artifact@66b63f4a7de003f4f00cc8e9af4b83b8f2abdb96 # v1
        with:
          path: .docs/.output/public

  deploy:
    needs: [build-docs]
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@ee48c7b82e077d7b8ef30b50a719e6a792a50c9a # v2
