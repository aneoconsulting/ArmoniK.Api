name: CI

on:
  pull_request:

jobs:
  verify-versions:
    name: Verify Versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: Cache Node Modules
        id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn --immutable

      - name: Verify Versions
        run: yarn verify-versions

  format-csharp:
    name: Format C#
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          submodules: true

      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x

      - name: Install ReSharper
        run: |
          dotnet tool install -g JetBrains.ReSharper.GlobalTools --version 2022.2.2

      - name: Restore
        run: |
          cd packages/csharp
          dotnet restore ArmoniK.Api.sln

      - name: Reformat
        run: |
          cd packages/csharp
          jb cleanupcode ArmoniK.Api.sln

      - name: Check Diff
        run: |
          DIFF="$(git diff --name-only)"

          if [ -z "$DIFF" ]; then
            echo "OK: Format is clean"
          else
            echo "Error: Format was not clean"
            echo "List of files:"
            echo "$DIFF"
            git diff
            exit 1
          fi

  format-protobuf:
    name: Format Protobuf
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          submodules: true

      - name: Check Diff
        run: docker run --rm --volume "$(pwd)/Protos/V1:/workspace" --workdir /workspace bufbuild/buf:1.8.0 format -d --exit-code

  build-angular:
    name: Build Angular
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: Cache Node Modules
        id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: Cache Protos
        id: proto-cache
        uses: actions/cache@v3
        with:
          path: packages/angular
          key: protobuf-${{ hashFiles('Protos/V1/*.proto') }}

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn --immutable

      - name: Install Protoc
        if: steps.proto-cache.outputs.cache-hit != 'true'
        uses: arduino/setup-protoc@v1

      - name: Build protos
        if: steps.proto-cache.outputs.cache-hit != 'true'
        run: yarn proto:generate:linux

      - name: Check index.ts
        run: yarn build

  build-documentation:
    name: Build Documentation
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Generate protobuf documentation
        uses: addnab/docker-run-action@v3
        with:
          image: pseudomuto/protoc-gen-doc
          options: -v ${{ github.workspace }}/Documentation/api:/out -v ${{ github.workspace }}/Protos/V1:/protos
          run: |
            protoc -I/usr/include -Iprotos --doc_out=/out --doc_opt=markdown,index.md protos/*.proto
