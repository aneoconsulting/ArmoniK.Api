name: Release Package

on:
  push:
    branches:
      - "**"
    tags-ignore: ["**"]

jobs:
  versionning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.genver.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Generate Version
        id: genver
        run: |
          VERSION=$(docker run --rm -v $(pwd):/repo codacy/git-version /bin/git-version --folder=/repo --release-branch=release --dev-branch=main)
          echo "::set-output name=version::$VERSION"
          echo $VERSION

  build:
    runs-on: ubuntu-latest
    needs: versionning
    env:
      VERSION: ${{ needs.versionning.outputs.version }}
    strategy:
      fail-fast: true
      matrix:
        package:
          - Api/csharp/ArmoniK.Api.Common.Channel/ArmoniK.Api.Common.Channel.csproj
          - Api/csharp/ArmoniK.Api.Common/ArmoniK.Api.Common.csproj
          - Api/csharp/ArmoniK.Api.Core/ArmoniK.Api.Core.csproj
          - Api/csharp/ArmoniK.Api.Client/ArmoniK.Api.Client.csproj
          - Api/csharp/ArmoniK.Api.Worker/ArmoniK.Api.Worker.csproj
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x

      - name: Build the package
        run: |
          dotnet build ${{ matrix.package }} -c Release

      - name: Pack the package
        run: |
          dotnet pack ${{ matrix.package }} -c Release -o /tmp/packages -p:PackageVersion=$VERSION
          ls /tmp/packages

      - name: Push the package
        # GitHub doesn't allow to read secrets from conditionals in steps (use is_*_set to avoid to expose the secret)
        # https://github.com/orgs/community/discussions/26726
        env:
          is_NUGET_API_KEY_set: ${{ secrets.NUGET_API_KEY != '' }}
        if: ${{ env.is_NUGET_API_KEY_set == 'true' }}
        run: dotnet nuget push /tmp/packages/ArmoniK.Api.*.nupkg -k ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Missing Nuget API Key
        # GitHub doesn't allow to read secrets from conditionals in steps (use is_*_set to avoid to expose the secret)
        # https://github.com/orgs/community/discussions/26726
        env:
          is_NUGET_API_KEY_set: ${{ secrets.NUGET_API_KEY != '' }}
        if: ${{ env.is_NUGET_API_KEY_set == 'false' }}
        run: echo "Missing Nuget API Key"

  python_package:
    runs-on: ubuntu-latest
    needs: versionning
    env:
      VERSION: ${{ needs.versionning.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: pip update and add build package
        run: |
          cd ./Api/python
          bash proto2python.sh ~/pyvenv

      - name: symlink to right directory
        run: |
          ln -s Api/python/pkg/ dist
      
      - name: Upload as artifact
        uses: actions/upload-artifact@v3
        with:
          name: python-packages
          path: dist

      - name: Publish to PyPI
        # GitHub doesn't allow to read secrets from conditionals in steps (use is_*_set to avoid to expose the secret)
        # https://github.com/orgs/community/discussions/26726
        env:
          is_PYPI_API_TOKEN_set: ${{ secrets.PYPI_API_TOKEN != '' }}
        if: ${{ env.is_PYPI_API_TOKEN_set == 'true' && github.ref == 'refs/heads/release'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          print_hash: true
          
      - name: Publish to PyPITest
        # GitHub doesn't allow to read secrets from conditionals in steps (use is_*_set to avoid to expose the secret)
        # https://github.com/orgs/community/discussions/26726
        env:
          is_PYPI_API_TOKEN_set: ${{ secrets.DEV_PYPI_API_TOKEN != '' }}
        if: ${{ env.is_PYPI_API_TOKEN_set == 'true' && github.ref == 'refs/heads/main'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.DEV_PYPI_API_TOKEN }}
          print_hash: true
          repository_url: https://test.pypi.org/legacy/

      - name: Missing PyPI API Key
        # GitHub doesn't allow to read secrets from conditionals in steps (use is_*_set to avoid to expose the secret)
        # https://github.com/orgs/community/discussions/26726
        env:
          is_PYPI_API_TOKEN_set: ${{ (secrets.PYPI_API_TOKEN != '' && github.ref == 'refs/heads/release') || (secrets.DEV_PYPI_API_TOKEN != '' && github.ref == 'refs/heads/main') }}
        if: ${{ env.is_PYPI_API_TOKEN_set == 'false' }}
        run: echo "Missing PyPI API Key"

  tag:
    # Only if branch is release
    if: ${{ github.ref == 'refs/heads/release' }}
    runs-on: ubuntu-latest
    needs:
      - versionning
      - build
    env:
      VERSION: ${{ needs.versionning.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: tag
        run: |
          git tag $VERSION
          git push origin $VERSION
