syntax = "proto3";


import "objects.proto";

option csharp_namespace = "ArmoniK.Api.gRPC.V1";
package ArmoniK.api.grpc.v1;

service Worker {
  rpc Process (stream ProcessRequest) returns (stream ProcessReply);
  rpc HealthCheck (Empty) returns (HealthCheckReply);
}




message ProcessRequest {
	message ComputeRequest {
		message InitRequest {
			Configuration configuration = 1;
			string session_id = 2;
			string task_id = 3;
			map<string, string> task_options = 4;
			repeated string expected_output_keys = 5; 
			DataChunk payload = 6;
		}
		message InitData {
			oneof Type{
				string key = 1;
				bool last_data = 2;
			}
		}
		oneof Type {
			InitRequest init_request = 1;
			DataChunk payload = 2;
			InitData init_data = 3;
			DataChunk data = 4;
		}
	}
	message CreateTask {
		string reply_id = 1;
		CreateTaskReply reply = 2;
	}
	message DataReply {
		message Init{
			string key = 1;
			oneof has_result {
				DataChunk data = 2;
				string error = 3;
			}
		}
		string reply_id = 1;
		oneof Type {
			Init init = 2;
			DataChunk data = 3;
		}
	}
	oneof Type {
		ComputeRequest compute = 1;
		CreateTask create_task = 2;
		DataReply resource = 3;
		DataReply common_data = 4;
		DataReply direct_data = 5;
	}
}


message ProcessReply {
	message Result{
		oneof Type {
			InitKeyedDataStream init = 1;
			DataChunk data = 2;
		}
	}
	message CreateSmallTaskRequest {
		TaskOptions task_options = 1;
		repeated TaskRequest task_requests = 2;
	}

	message CreateLargeTaskRequest {
		message InitRequest {
			TaskOptions task_options = 1;
		}
		oneof Type {
			InitRequest init_request = 1;
			InitTaskRequest init_task = 2;
			DataChunk task_payload = 3;
		}
	}
	message DataRequest {
		string key = 1;
	}
	string request_id = 1;
	oneof Type {
		Output output = 2;
		Result result = 3;
		CreateSmallTaskRequest create_small_task = 4;
		CreateLargeTaskRequest create_large_task = 5;
		DataRequest resource = 6;
		DataRequest common_data = 7;
		DataRequest direct_data = 8;
	}
}

message HealthCheckReply {
	enum ServingStatus {
		UNKNOWN = 0;
		SERVING = 1;
		NOT_SERVING = 2;
	}
	ServingStatus status = 1;
}