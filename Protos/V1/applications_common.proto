/**
 * Messages describing applications and associated requests and responses.
 */
syntax = "proto3";

package armonik.api.grpc.v1.applications;

import "objects.proto";

option csharp_namespace = "ArmoniK.Api.gRPC.V1.Applications";

/**
 * A raw application object.
 *
 * Used when a list of applications is requested.
 */
message ApplicationRaw {
  string name = 1; /** Application name. */
  string version = 2; /** Application version. */

  string namespace = 3; /** Application namespace used in the excecuted class. */
  string service = 4; /** Application service used in the excecuted class. */
}

/**
 * Request to list applications.
 *
 * Use pagination, filtering and sorting.
 */
message ListApplicationsRequest {
  int32 page = 1; /** The page number. Start at 0. */
  int32 page_size = 2; /** Number of items per page. */

  /**
   * Represents a filter with all available fields.
   *
   * Any fields can be used at the same time.
   */
  message Filter {
    string name = 1; /** Application name. */
    string version = 2; /** Application version. */
    string namespace = 3; /** Application namespace. */
    string service = 4; /** Application service. */
  }

  /** The filter.
   *
   * Must be set for every request but allowed to be empty.
   */
  Filter filter = 3;

  /**
   * Represents every available field to use in order to sort applications.
   */
  enum OrderByField {
    ORDER_BY_FIELD_UNSPECIFIED = 0; /** Unspecified. */
    ORDER_BY_FIELD_NAME = 1; /** Application name. */
    ORDER_BY_FIELD_VERSION = 2; /** Application version. */
    ORDER_BY_FIELD_NAMESPACE = 3; /** Application namespace. */
    ORDER_BY_FIELD_SERVICE = 4; /** Application service. */
  }

  /**
   * Represents every available order directions.
   */
  enum OrderDirection {
    ORDER_DIRECTION_UNSPECIFIED = 0; /** Unspecified. */
    ORDER_DIRECTION_ASC = 1; /** Ascending. */
    ORDER_DIRECTION_DESC = 2; /** Descending. */
  }

  /**
   * Represents the sort object.
   */
  message Sort {
    repeated OrderByField field = 1; /** The field to order by. */
    OrderDirection direction = 2; /** The order direction. */
  }

  /** The sort.
   *
   * Must be set for every request.
   */
  Sort sort = 4;
}

/**
 * Response to list applications.
 *
 * Use pagination, filtering and sorting from the request.
 * Return a list of raw applications.
 */
message ListApplicationsResponse {
  repeated ApplicationRaw applications = 1;

  int32 page = 2; /** The current page. Start at 0. */
  int32 page_size = 3; /** Number of items per page. */
  int32 total = 4; /** Total number of items. */
}

/**
  * Request to get count from tasks status by application.
  */
message CountTasksByStatusRequest {
  string name = 1; /** Application name. Must fail when name is empty. */
  string version = 2; /** Application version. Must fail when version is emtpy. */
}

/**
 * Response to get count from tasks status by application.
 */
message CountTasksByStatusResponse {
  repeated StatusCount status = 1; /** Number of tasks by status. Expected to have only 1 object by task status. */
}
